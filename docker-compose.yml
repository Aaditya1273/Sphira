version: '3.8'

services:
  # Frontend application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_SOMNIA_RPC_URL=https://testnet-rpc.somnia.network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - contracts
    networks:
      - sphira-network

  # Smart contracts development environment
  contracts:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    ports:
      - "8545:8545"
    environment:
      - NODE_ENV=development
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - sphira-network
    command: npm run node

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sphira-network
    command: redis-server --appendonly yes

  # PostgreSQL for application data
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sphira
      - POSTGRES_USER=sphira
      - POSTGRES_PASSWORD=sphira_dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - sphira-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
    networks:
      - sphira-network

volumes:
  redis_data:
  postgres_data:

networks:
  sphira-network:
    driver: bridge
